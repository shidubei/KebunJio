# Application Name
spring.application.name=KebunJio

# Thymeleaf Configuration
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

server.port=8080

# MongoDB Configuration
spring.data.mongodb.uri=mongodb://localhost:27017/KebunJioDB
spring.data.mongodb.auto-index-creation=true

# Google Calendar API Configuration
google.client.client-id=10851869906-253fen308qpejr49o075hr2gokoso5kt.apps.googleusercontent.com
google.client.client-secret=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
google.client.access-token-uri=https://oauth2.googleapis.com/token
google.client.authorization-uri=https://accounts.google.com/o/oauth2/auth
google.client.token-info-uri=https://oauth2.googleapis.com/tokeninfo
google.client.user-authorization-uri=https://accounts.google.com/o/oauth2/auth
google.client.client-authentication-scheme=form
google.resource.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
google.resource.prefer-token-info=true
google.redirect.uri=http://localhost:8080/oauth2/callback
google.application.name=KebunJio
google.oauth2.scope=https://www.googleapis.com/auth/calendar

# Server Configuration
server.servlet.context-path=/api

# CORS Configuration
spring.mvc.cors.allowed-origins=http://localhost:3000
spring.mvc.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.mvc.cors.allowed-headers=*
spring.mvc.cors.allow-credentials=true
spring.mvc.cors.max-age=3600

# Jackson Configuration
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.time-zone=Asia/Singapore
spring.jackson.serialization.write-dates-as-timestamps=false

# Logging Configuration
logging.level.root=INFO
logging.level.iss.nus.edu.sg.sa4106=DEBUG
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# File Upload Configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Security Configuration
spring.security.oauth2.client.registration.google.client-id=${google.client.client-id}
spring.security.oauth2.client.registration.google.client-secret=${google.client.client-secret}
spring.security.oauth2.client.registration.google.redirect-uri=${google.redirect.uri}
spring.security.oauth2.client.registration.google.scope=${google.oauth2.scope}

# Elasticsearch Configuration
spring.data.elasticsearch.uris=http://localhost:9200
